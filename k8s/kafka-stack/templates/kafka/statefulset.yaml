{{- include "kafka.values" . }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  annotations:
    app.kubernetes.io/name: kafka
    prometheus.io/scrape: "true"
    prometheus.io/port: "9997"
spec:
  serviceName: "{{ .Release.Name }}"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: set-node-id
          image: busybox:1.36
          command:
            - "sh"
            - "-c"
            - |
              # Extract ordinal from POD_NAME (e.g., kafka-0 -> 0)
              NODE_ID=$(echo $POD_NAME | sed 's/{{ .Release.Name }}-//')
              echo $NODE_ID > /etc/kafka/node-id
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name  # Injects kafka-0, kafka-1, etc.
          volumeMounts:
            - name: kafka-config
              mountPath: /etc/kafka
      containers:
        - name: kafka
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: client-ext  # External client port
              protocol: TCP
              containerPort: 9092

            - name: client-int  # Internal client port
              protocol: TCP
              containerPort: 29092

            - name: controller  # Controller port
              protocol: TCP
              containerPort: 29093

            - name: jmx
              protocol: TCP
              containerPort: 9997 # JMX port
          command:
            - "bash"
            - "-c"
            - |
              # Copy the update_run.sh script to the container to make it executable
              cp /scripts/update_run.sh /tmp/update_run.sh
              # Extract node ID from init container output
              NODE_ID=$(cat /etc/kafka/node-id)
              # Set the KAFKA_BROKER_ID and KAFKA_NODE_ID environment variables
              export KAFKA_BROKER_ID=$NODE_ID
              export KAFKA_NODE_ID=$NODE_ID
              # Replace the KAFKA_NODE_ID in the KAFKA_ADVERTISED_LISTENERS environment variable
              export KAFKA_ADVERTISED_LISTENERS=$(echo "$KAFKA_ADVERTISED_LISTENERS" | sed "s/\$(KAFKA_NODE_ID)/$KAFKA_NODE_ID/g")
              echo "NODE ID: $NODE_ID"
              if [ ! -f /tmp/update_run.sh ]; then
                echo "ERROR: Did you forget the update_run.sh file?" && exit 1
              else
                chmod +x /tmp/update_run.sh && /tmp/update_run.sh && /etc/confluent/docker/run
              fi
          volumeMounts:
            - name: scripts
              mountPath: /scripts/update_run.sh
              subPath: update_run.sh
            - name: kafka-config
              mountPath: /etc/kafka
            - name: kafka                           # Volume for kafka logs
              mountPath: /tmp/kraft-combined-logs
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://{{ .Release.Name }}-$(KAFKA_NODE_ID).{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:29092,PLAINTEXT_HOST://{{ .Release.Name }}-$(KAFKA_NODE_ID).{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:9092"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: {{ include "kafka.quorum" . }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          startupProbe:
            tcpSocket:
              port: 29092  # Internal PLAINTEXT port
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 29092  # Internal PLAINTEXT port
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "kafka-broker-api-versions --bootstrap-server localhost:29092"
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 3
      volumes:
        - name: scripts
          configMap:
            name: kafka
            items:
              - key: update_run.sh
                path: update_run.sh
        - name: kafka-config
          emptyDir: {}  # Shared volume for node-id
  volumeClaimTemplates:
    - metadata:
        name: kafka
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 500Mi